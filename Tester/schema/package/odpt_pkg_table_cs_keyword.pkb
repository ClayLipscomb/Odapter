CREATE OR REPLACE PACKAGE BODY ODPT.odpt_pkg_table_cs_keyword AS
                                     
	PROCEDURE proc (	
		abstract	odpt_table_cs_keyword.abstract%TYPE,
		event		odpt_table_cs_keyword.event%TYPE,
		new			odpt_table_cs_keyword.new%TYPE,
		struct		odpt_table_cs_keyword.struct%TYPE,
		"as"		odpt_table_cs_keyword."as"%TYPE,
		explicit	odpt_table_cs_keyword.struct%TYPE, 
		"null"		odpt_table_cs_keyword."null"%TYPE,
		switch		odpt_table_cs_keyword.switch%TYPE,
		base		odpt_table_cs_keyword.base%TYPE,
		extern		odpt_table_cs_keyword.extern%TYPE,
		object		odpt_table_cs_keyword.object%TYPE,
		this		odpt_table_cs_keyword.this%TYPE,
		bool		odpt_table_cs_keyword.bool%TYPE,
		false		odpt_table_cs_keyword.false%TYPE,
		operator	odpt_table_cs_keyword.operator%TYPE,
		throw		odpt_table_cs_keyword.throw%TYPE,
		break		odpt_table_cs_keyword.break%TYPE,
		finally		odpt_table_cs_keyword.finally%TYPE,
		out			odpt_table_cs_keyword.out%TYPE,
		true		odpt_table_cs_keyword.true%TYPE,
		byte		odpt_table_cs_keyword.byte%TYPE,
		fixed		odpt_table_cs_keyword.fixed%TYPE,
		override	odpt_table_cs_keyword.override%TYPE,
		try			odpt_table_cs_keyword.try%TYPE,
		"case"		odpt_table_cs_keyword."CASE"%TYPE,
		"float"		odpt_table_cs_keyword."float"%TYPE,
		params		odpt_table_cs_keyword.params%TYPE, 
		typeof		odpt_table_cs_keyword.typeof%TYPE,
		catch		odpt_table_cs_keyword.catch%TYPE,
		"for"		odpt_table_cs_keyword."for"%TYPE,
		private		odpt_table_cs_keyword.private%TYPE,
		uint		odpt_table_cs_keyword.uint%TYPE,
		"char"		odpt_table_cs_keyword."char"%TYPE,
		foreach		odpt_table_cs_keyword.foreach%TYPE,
		protected	odpt_table_cs_keyword.protected%TYPE,
		ulong		odpt_table_cs_keyword.ulong%TYPE,
		checked		odpt_table_cs_keyword.checked%TYPE,
		"goto"		odpt_table_cs_keyword."GOTO"%TYPE,
		"public"	odpt_table_cs_keyword."public"%TYPE,
		unchecked	odpt_table_cs_keyword.unchecked%TYPE,
		class		odpt_table_cs_keyword.class%TYPE,
		"if"		odpt_table_cs_keyword."IF"%TYPE,
		readonly	odpt_table_cs_keyword.readonly%TYPE,
		unsafe		odpt_table_cs_keyword.unsafe%TYPE,
		const		odpt_table_cs_keyword.const%TYPE,
		implicit	odpt_table_cs_keyword.implicit%TYPE,
		ref			odpt_table_cs_keyword.ref%TYPE,
		ushort		odpt_table_cs_keyword.ushort%TYPE,
		continue	odpt_table_cs_keyword.continue%TYPE,
		"in"		odpt_table_cs_keyword."in"%TYPE,
		return		odpt_table_cs_keyword.return%TYPE,
		using		odpt_table_cs_keyword.using%TYPE,
		"decimal"	odpt_table_cs_keyword."decimal"%TYPE,
		int			odpt_table_cs_keyword.int%TYPE,
		sbyte		odpt_table_cs_keyword.sbyte%TYPE, 
		virtual		odpt_table_cs_keyword.virtual%TYPE,
		"default"	odpt_table_cs_keyword."default"%TYPE,
		interface	odpt_table_cs_keyword.interface%TYPE,
		sealed		odpt_table_cs_keyword.sealed%TYPE,
		volatile	odpt_table_cs_keyword.volatile%TYPE,	
		delegate	odpt_table_cs_keyword.delegate%TYPE,
		internal	odpt_table_cs_keyword.internal%TYPE,
		short		odpt_table_cs_keyword.short%TYPE,
		void		odpt_table_cs_keyword.void%TYPE,
		do			odpt_table_cs_keyword.do%TYPE,
		"is"		odpt_table_cs_keyword."is"%TYPE,
		sizeof		odpt_table_cs_keyword.sizeof%TYPE,
		while		odpt_table_cs_keyword.while%TYPE,
		double		odpt_table_cs_keyword.double%TYPE,
		"lock"		odpt_table_cs_keyword."lock"%TYPE,
		stackalloc	odpt_table_cs_keyword.stackalloc%TYPE,
		"else"		odpt_table_cs_keyword."else"%TYPE,
		"long"		odpt_table_cs_keyword."long"%TYPE,
		static		odpt_table_cs_keyword.static%TYPE,
		enum		odpt_table_cs_keyword.enum%TYPE,
	    namespace	odpt_table_cs_keyword.namespace%TYPE,
		string		odpt_table_cs_keyword.string%TYPE,
	    dynamic		odpt_table_cs_keyword.dynamic%TYPE,
		get			odpt_table_cs_keyword.get%TYPE,
		let			odpt_table_cs_keyword.let%TYPE,
		partial		odpt_table_cs_keyword.partial%TYPE,		
		"set"		odpt_table_cs_keyword."set"%TYPE,
		value		odpt_table_cs_keyword.value%TYPE,	
		var			odpt_table_cs_keyword.var%TYPE,
		"where"		odpt_table_cs_keyword."where"%TYPE ) IS
	BEGIN
		RETURN;
	END;

END odpt_pkg_table_cs_keyword;
/